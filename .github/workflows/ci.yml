name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm run ci:test
      env:
        CI: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'

    - name: Wait for deployment
      run: sleep 45
      
    - name: Test Production Deployment
      run: |
        echo "Testing production deployment..."
        curl -sSf ${{ secrets.VERCEL_DEPLOYMENT_URL }} > /dev/null
        echo "âœ… Production deployment is accessible"
      env:
        VERCEL_URL: ${{ secrets.VERCEL_DEPLOYMENT_URL }}
        
    - name: Run Production E2E Tests
      run: |
        npm run e2e:headless
      env:
        CYPRESS_BASE_URL: ${{ secrets.VERCEL_DEPLOYMENT_URL }}
